{"version":3,"sources":["webpack:///./src/templates/allTagsIndex.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/tinyHeader.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_footer__WEBPACK_IMPORTED_MODULE_2__","_components_tinyHeader__WEBPACK_IMPORTED_MODULE_3__","AllTagsTemplate","_ref","data","tags","pageContext","a","createElement","className","id","map","tag","style","textTransform","key","to","toLowerCase","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Footer","author","name","react__WEBPACK_IMPORTED_MODULE_3___default","href","Date","getFullYear","gatsby__WEBPACK_IMPORTED_MODULE_2__","defaultProps","TinyHeader","_data$site$siteMetada","_public_static_d_4105681548_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","homeName","siteUrl","react__WEBPACK_IMPORTED_MODULE_1___default","role","rel","target","title","xmlns","viewBox","cx","cy"],"mappings":"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","file":"component---src-templates-all-tags-index-js-547d7418f58cc4c573fe.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Footer from '../components/footer';\nimport TinyHeader from '../components/tinyHeader';\n\nconst AllTagsTemplate = ({ data, pageContext }) => {\n  const { tags } = pageContext;\n  return (\n    <div className={'page-template page-tag'}>\n      <div className={'site-wrapper'}>\n        <TinyHeader />\n        <main id={'site-main'} className={'site-main outer'}>\n          <div className={'inner'}>\n            <article className={'post-full post page no-image'}>\n              <header className={'post-full-header'}>\n                <h1 className={'post-full-title'}>#Tags</h1>\n              </header>\n              <section className={'post-full-content'}>\n                <div className={'post-content'}>\n                  <p>List of (almost) all the tags.</p>\n                  <ol>\n                    {tags.map(tag => (\n                      <li style={{ textTransform: `capitalize` }} key={tag}>\n                        <Link to={`/tags/${tag}`}>{tag.toLowerCase()}</Link>\n                      </li>\n                    ))}\n                  </ol>\n                </div>\n              </section>\n            </article>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default AllTagsTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport '../components/layout.css';\n\nconst Footer = ({ author, name, style }) => (\n  <footer className={'site-footer outer'} style={{ ...style }}>\n    <div className={'site-footer-content inner'}>\n      <section className={'copyright'}>\n        <a href={`https://www.twitter.com/${author}`}>{name}</a> ©{' '}\n        {new Date().getFullYear()}\n      </section>\n      <nav className={'site-footer-nav'}>\n        <Link to=\"/\">Latest Posts</Link>\n      </nav>\n    </div>\n  </footer>\n);\n\nFooter.propTypes = {\n  name: PropTypes.string,\n  author: PropTypes.string,\n};\n\nFooter.defaultProps = {\n  name: `Sanā Habeeb`,\n  author: `@SanaHabeeb4`,\n};\n\nexport default Footer;\n","import React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nconst TinyHeader = () => {\n  const data = useStaticQuery(graphql`\n    query getSiteUrl {\n      site {\n        siteMetadata {\n          homeName\n          siteUrl\n        }\n      }\n    }\n  `);\n  const { homeName, siteUrl } = data.site.siteMetadata;\n  return (\n    <header className={'site-header outer'}>\n      <div className={'inner'}>\n        <nav className={'site-nav'}>\n          <div className={'site-nav-left'}>\n            <Link to={'/'} className={'site-nav-logo'}>\n              {homeName}\n            </Link>\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-weblog\" role=\"menuitem\">\n                <Link to={'/tags'} style={{ textTransform: `upper` }}>\n                  #tags\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className={'site-nav-right'}>\n            <div className={'social-links'}>\n              <a\n                className={'rss-button'}\n                href={`https://feedly.com/i/subscription/feed/${siteUrl}/rss.xml`}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                title=\"RSS\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\"></circle>\n                  <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\"></path>\n                </svg>\n              </a>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default TinyHeader;\n"],"sourceRoot":""}