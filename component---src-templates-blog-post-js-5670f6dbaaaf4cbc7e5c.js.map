{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/tinyHeader.js"],"names":["BlogPostTemplate","componentDidMount","d","s","this","props","pageContext","pathSlug","document","createElement","src","setAttribute","Date","head","body","appendChild","render","_this$props","data","twitterHandle","author","cover","date","description","name","next","photo","prev","tempTags","_toConsumableArray","tags","newTags","length","tag","shift","toLowerCase","push","react__WEBPACK_IMPORTED_MODULE_8___default","a","gatsby__WEBPACK_IMPORTED_MODULE_9__","to","style","textTransform","key","title","markdownRemark","frontmatter","html","className","_components_tinyHeader__WEBPACK_IMPORTED_MODULE_11__","id","dateTime","toDateString","backgroundImage","dangerouslySetInnerHTML","__html","href","alt","AuthorCardContent","ReadMore","path","excerpt","_components_footer__WEBPACK_IMPORTED_MODULE_10__","React","Component","query","_ref","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","getFullYear","gatsby__WEBPACK_IMPORTED_MODULE_2__","defaultProps","TinyHeader","_data$site$siteMetada","_public_static_d_4105681548_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","homeName","siteUrl","react__WEBPACK_IMPORTED_MODULE_1___default","role","rel","target","xmlns","viewBox","cx","cy","r"],"mappings":"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","file":"component---src-templates-blog-post-js-5670f6dbaaaf4cbc7e5c.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Footer from '../components/footer';\nimport TinyHeader from '../components/tinyHeader';\n\nclass BlogPostTemplate extends React.Component {\n  componentDidMount() {\n    const pathSlug = this.props.pageContext.pathSlug;\n    var disqus_config = function() {\n      this.page.url = 'https://sana137.in';\n      this.page.identifier = { pathSlug };\n    };\n    (function() {\n      // DON'T EDIT BELOW THIS LINE\n      var d = document,\n        s = d.createElement('script');\n      s.src = 'https://sana137.disqus.com/embed.js';\n      s.setAttribute('data-timestamp', +new Date());\n      (d.head || d.body).appendChild(s);\n    })();\n    if (disqus_config); // only to avoid warning 'disqus_thread' was never used.\n  }\n  render() {\n    const { data, pageContext } = this.props;\n    const {\n      author: twitterHandle,\n      cover,\n      date,\n      description,\n      name,\n      next,\n      photo,\n      prev,\n      tags,\n    } = pageContext;\n    const tempTags = [...tags];\n    const newTags = [];\n    while (tempTags.length > 1) {\n      let tag = tempTags.shift().toLowerCase();\n      newTags.push(\n        <Link\n          to={`/tags/${tag}`}\n          style={{ textTransform: `capitalize` }}\n          key={tag}\n        >\n          {tag}\n        </Link>\n      );\n      newTags.push(' • ');\n    }\n    let tag = tempTags.shift().toLowerCase();\n    newTags.push(\n      <Link\n        to={`/tags/${tag}`}\n        style={{ textTransform: `capitalize` }}\n        key={tag}\n      >\n        {tag}\n      </Link>\n    );\n    const title = data.markdownRemark.frontmatter.title;\n    const html = data.markdownRemark.html;\n    return (\n      <div className={'post-template'}>\n        <div className={'site-wrapper'}>\n          <TinyHeader />\n          <main id={'site-main'} className={'site-main outer'}>\n            <div className={'inner'}>\n              <article className={'post-full post'}>\n                <header className={'post-full-header'}>\n                  <section className={'post-full-meta'}>\n                    <time className={'post-full-meta-date'} dateTime={date}>\n                      {new Date(date).toDateString()}\n                    </time>\n                  </section>\n                  <h1 className={'post-full-title'}>{title}</h1>\n                  <span>{newTags}</span>\n                </header>\n                <figure\n                  className={'post-full-image'}\n                  style={{ backgroundImage: `url(${cover})` }}\n                />\n                <section className={'post-full-content'}>\n                  <div\n                    className={'post-content'}\n                    dangerouslySetInnerHTML={{ __html: html }}\n                  />\n                </section>\n                <footer className={'post-full-footer'}>\n                  <section className={'author-card'}>\n                    <a\n                      href={`https://www.twitter.com/${twitterHandle}`}\n                      className={'author-profile-image'}\n                    >\n                      <img\n                        src={photo}\n                        className={'avatar-wrapper'}\n                        alt={name}\n                      />\n                    </a>\n                    <AuthorCardContent name={name} description={description} />\n                  </section>\n                  <ReadMore />\n                </footer>\n                <section className={'post-full-comments'}>\n                  <div id=\"disqus_thread\"></div>\n                </section>\n              </article>\n            </div>\n          </main>\n          <aside className={'read-next outer'}>\n            <div className={'inner'}>\n              <div className={'read-next-feed'}>\n                {next && (\n                  <article className={'post-card post'}>\n                    <Link\n                      className={'post-card-image-link'}\n                      to={next.frontmatter.path}\n                    >\n                      <div\n                        className={'post-card-image'}\n                        style={{\n                          backgroundImage: `url(${next.frontmatter.cover})`,\n                        }}\n                      />\n                    </Link>\n                    <div className={'post-card-content'}>\n                      <Link\n                        className={'post-card-content-link'}\n                        to={next.frontmatter.path}\n                      >\n                        <header className={'post-card-header'}>\n                          <span className={'post-card-tags'}>\n                            {next.frontmatter.tags\n                              ? next.frontmatter.tags[0] + ' • '\n                              : ''}\n                            {new Date(next.frontmatter.date).toDateString()}\n                          </span>\n                          <h2 className={'post-card-title'}>\n                            {next.frontmatter.title}\n                          </h2>\n                        </header>\n                        <section className={'post-card-excerpt'}>\n                          <p>{next.frontmatter.excerpt}</p>\n                        </section>\n                      </Link>\n                    </div>\n                  </article>\n                )}\n                {prev && (\n                  <article className={'post-card post'}>\n                    <Link\n                      className={'post-card-image-link'}\n                      to={prev.frontmatter.path}\n                    >\n                      <div\n                        className={'post-card-image'}\n                        style={{\n                          backgroundImage: `url(${prev.frontmatter.cover})`,\n                        }}\n                      />\n                    </Link>\n                    <div className={'post-card-content'}>\n                      <Link\n                        className={'post-card-content-link'}\n                        to={prev.frontmatter.path}\n                      >\n                        <header className={'post-card-header'}>\n                          <span className={'post-card-tags'}>\n                            {prev.frontmatter.tags\n                              ? prev.frontmatter.tags[0] + ' • '\n                              : ''}\n                            {new Date(prev.frontmatter.date).toDateString()}\n                          </span>\n                          <h2 className={'post-card-title'}>\n                            {prev.frontmatter.title}\n                          </h2>\n                        </header>\n                        <section className={'post-card-excerpt'}>\n                          <p>{prev.frontmatter.excerpt}</p>\n                        </section>\n                      </Link>\n                    </div>\n                  </article>\n                )}\n              </div>\n            </div>\n          </aside>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\nexport default BlogPostTemplate;\n\nconst ReadMore = () => (\n  <div className={'post-full-footer-right'}>\n    <Link to={'/'} className={'author-card-button'}>\n      Read More\n    </Link>\n  </div>\n);\n\nconst AuthorCardContent = ({ name, description }) => (\n  <section className={'author-card-content'}>\n    <h4 className={'author-card-name'}>{name}</h4>\n    <p>{description}</p>\n  </section>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport '../components/layout.css';\n\nconst Footer = ({ author, name, style }) => (\n  <footer className={'site-footer outer'} style={{ ...style }}>\n    <div className={'site-footer-content inner'}>\n      <section className={'copyright'}>\n        <a href={`https://www.twitter.com/${author}`}>{name}</a> ©{' '}\n        {new Date().getFullYear()}\n      </section>\n      <nav className={'site-footer-nav'}>\n        <Link to=\"/\">Latest Posts</Link>\n      </nav>\n    </div>\n  </footer>\n);\n\nFooter.propTypes = {\n  name: PropTypes.string,\n  author: PropTypes.string,\n};\n\nFooter.defaultProps = {\n  name: `Sanā Habeeb`,\n  author: `@SanaHabeeb4`,\n};\n\nexport default Footer;\n","import React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nconst TinyHeader = () => {\n  const data = useStaticQuery(graphql`\n    query getSiteUrl {\n      site {\n        siteMetadata {\n          homeName\n          siteUrl\n        }\n      }\n    }\n  `);\n  const { homeName, siteUrl } = data.site.siteMetadata;\n  return (\n    <header className={'site-header outer'}>\n      <div className={'inner'}>\n        <nav className={'site-nav'}>\n          <div className={'site-nav-left'}>\n            <Link to={'/'} className={'site-nav-logo'}>\n              {homeName}\n            </Link>\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-weblog\" role=\"menuitem\">\n                <Link to={'/tags'} style={{ textTransform: `upper` }}>\n                  #tags\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className={'site-nav-right'}>\n            <div className={'social-links'}>\n              <a\n                className={'rss-button'}\n                href={`https://feedly.com/i/subscription/feed/${siteUrl}/rss.xml`}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                title=\"RSS\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\"></circle>\n                  <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\"></path>\n                </svg>\n              </a>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default TinyHeader;\n"],"sourceRoot":""}